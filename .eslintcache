[{"C:\\Users\\Bao\\Desktop\\da-java\\src\\reportWebVitals.js":"1","C:\\Users\\Bao\\Desktop\\da-java\\src\\App.js":"2","C:\\Users\\Bao\\Desktop\\da-java\\src\\index.js":"3","C:\\Users\\Bao\\Desktop\\da-java\\src\\pages\\login\\Login.js":"4","C:\\Users\\Bao\\Desktop\\da-java\\src\\api\\Auth.js":"5","C:\\Users\\Bao\\Desktop\\da-java\\src\\layouts\\mainLayout\\MainLayout.js":"6","C:\\Users\\Bao\\Desktop\\da-java\\src\\guard\\ProtectedRoute.js":"7","C:\\Users\\Bao\\Desktop\\da-java\\src\\pages\\cart\\Cart.js":"8","C:\\Users\\Bao\\Desktop\\da-java\\src\\components\\product_detail\\ProductDetail.js":"9","C:\\Users\\Bao\\Desktop\\da-java\\src\\pages\\product\\Product.js":"10","C:\\Users\\Bao\\Desktop\\da-java\\src\\api\\ProductByCategoryAPI.js":"11","C:\\Users\\Bao\\Desktop\\da-java\\src\\api\\CategoryAPI.js":"12","C:\\Users\\Bao\\Desktop\\da-java\\src\\api\\OrderAPI.js":"13"},{"size":362,"mtime":1606377949790,"results":"14","hashOfConfig":"15"},{"size":751,"mtime":1612887646595,"results":"16","hashOfConfig":"15"},{"size":449,"mtime":1609244934813,"results":"17","hashOfConfig":"15"},{"size":2185,"mtime":1612887352157,"results":"18","hashOfConfig":"15"},{"size":1401,"mtime":1613811572868,"results":"19","hashOfConfig":"15"},{"size":16620,"mtime":1613811034414,"results":"20","hashOfConfig":"15"},{"size":462,"mtime":1609260602800,"results":"21","hashOfConfig":"15"},{"size":3229,"mtime":1613809258283,"results":"22","hashOfConfig":"15"},{"size":4979,"mtime":1614000403780,"results":"23","hashOfConfig":"15"},{"size":2731,"mtime":1613481788061,"results":"24","hashOfConfig":"15"},{"size":373,"mtime":1611755719746,"results":"25","hashOfConfig":"15"},{"size":341,"mtime":1611755755512,"results":"26","hashOfConfig":"15"},{"size":828,"mtime":1613114356510,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"63vpyr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"C:\\Users\\Bao\\Desktop\\da-java\\src\\reportWebVitals.js",[],["63","64"],"C:\\Users\\Bao\\Desktop\\da-java\\src\\App.js",["65","66"],"import \"./App.css\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Login from \"../src/pages/login/Login\";\nimport ProtectedRoute from \"../src/guard/ProtectedRoute\";\nimport Layouts from \"../src/layouts/mainLayout/MainLayout\";\nimport Cart from \"../src/pages/cart/Cart\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/product/category=1\" />\n          {/* <Route exact path=\"/login\" component={Login} /> */}\n          <Route path=\"/product/*\" component={Layouts} />\n          <Route exact path=\"/cart\" component={Cart}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","C:\\Users\\Bao\\Desktop\\da-java\\src\\index.js",[],"C:\\Users\\Bao\\Desktop\\da-java\\src\\pages\\login\\Login.js",["67"],"import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport Auth from \"../../api/Auth\";\r\n\r\nexport default function Login() {\r\n  const [loading, setLoading] = useState(false);\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n  const onFinish = (values) => {\r\n    setLoading(true);\r\n    Auth.login(values.email, values.password)\r\n      .then((res) => {\r\n        console.log(\"success\");\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        onFinishFailed();\r\n      });\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    setLoading(false);\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  // if (localStorage.getItem(\"token\")) {\r\n  //   return <Redirect to=\"/product/category=1\" />;\r\n  // }\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__content\">\r\n        <div className=\"content__left\">Welcome to our website</div>\r\n        <div className=\"content__right\">\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              rules={[{ required: true, message: \"Please input your email!\" }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                loading={loading}\r\n                disabled={loading}\r\n              >\r\n                {loading ? \"Logging in ...\" : \"Log in\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Bao\\Desktop\\da-java\\src\\api\\Auth.js",["68"],"import axios from \"axios\";\r\n\r\nconst login = (email, password) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\"https://beverage-app.herokuapp.com/login\", {\r\n        username: email,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n        localStorage.setItem(\r\n          \"token\",\r\n          JSON.stringify(res.headers.authorization)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\nconst getUserByUsername = (token, username) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(`https://beverage-app.herokuapp.com/user/username=${username}`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nconst register = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\"https://beverage-app.herokuapp.com/user/register\", {\r\n        fullname: data.fullname,\r\n        username: data.username,\r\n        password: data.password,\r\n        phone: data.phone,\r\n        address: data.address,\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\nexport default { login, getUserByUsername, register };\r\n","C:\\Users\\Bao\\Desktop\\da-java\\src\\layouts\\mainLayout\\MainLayout.js",["69","70"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./MainLayout.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Layout,\r\n  Menu,\r\n  Carousel,\r\n  Input,\r\n  Badge,\r\n  Dropdown,\r\n  message,\r\n  Modal,\r\n  Button,\r\n  Form,\r\n} from \"antd\";\r\nimport {\r\n  CoffeeOutlined,\r\n  ShoppingCartOutlined,\r\n  OrderedListOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Product from \"../../pages/product/Product\";\r\nimport CategoryAPI from \"../../api/CategoryAPI\";\r\nimport OrderAPI from \"../../api/OrderAPI\";\r\nimport Auth from \"../../api/Auth\";\r\n\r\nexport default function MainLayout() {\r\n  const { Header, Content, Footer, Sider } = Layout;\r\n  const { Search } = Input;\r\n  let location = useLocation();\r\n  let path = location.pathname;\r\n  const [categories, setCategories] = useState(null);\r\n  const [details, setDetails] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalLogin, setModalLogin] = useState(false);\r\n  const [modalRegister, setModalRegister] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const recieveData = (orders) => {\r\n    setDetails(orders);\r\n    setCount(orders.length);\r\n  };\r\n  const deleteItem = (index) => {\r\n    details.splice(index, 1);\r\n    setCount(details.length);\r\n  };\r\n  const delivery = () => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      showModal();\r\n    } else {\r\n      error();\r\n    }\r\n    localStorage.setItem(\"details\", JSON.stringify(details));\r\n  };\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n  };\r\n  const listlogOut = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Link to=\"/cart\" target=\"_top\">\r\n          <OrderedListOutlined style={{ fontSize: 24 }} /> Your Delivery\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item danger onClick={logout}>\r\n        Log out\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  const listOrder = (\r\n    <Menu>\r\n      {count > 0 ? (\r\n        details.map((detail, index) => {\r\n          return (\r\n            <Menu.Item\r\n              style={{\r\n                display: \"flex\",\r\n\r\n                width: 460,\r\n              }}\r\n            >\r\n              <img\r\n                src={detail.detail.detail.image}\r\n                height=\"100px\"\r\n                width=\"100px\"\r\n              />\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  marginLeft: 24,\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                <p>{detail.detail.detail.name}</p>\r\n                <p>Amount: {detail.order.quantity}</p>\r\n                <p>Total: {detail.detail.totalCost}$</p>\r\n              </div>\r\n\r\n              <Button\r\n                style={{ marginLeft: \"auto\" }}\r\n                onClick={() => deleteItem(index)}\r\n              >\r\n                Delete item{\" \"}\r\n              </Button>\r\n            </Menu.Item>\r\n          );\r\n        })\r\n      ) : (\r\n        <Menu.Item>No Item </Menu.Item>\r\n      )}\r\n      {count > 0 ? (\r\n        <Menu.Item>\r\n          <Button type=\"primary\" onClick={delivery}>\r\n            Delivery now\r\n          </Button>\r\n        </Menu.Item>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Menu>\r\n  );\r\n  const error = () => {\r\n    message.error(\"You must login to delivery!\");\r\n  };\r\n  const errorLogin = () => {\r\n    message.error(\"Username or password invalid!\");\r\n  };\r\n  const success = () => {\r\n    message.success(\"Your order is being delivered!\");\r\n  };\r\n  const successRegister = () => {\r\n    message.success(\"Successfully!\");\r\n  };\r\n  const contentStyle = {\r\n    height: 380,\r\n    color: \"#fff\",\r\n    lineHeight: \"160px\",\r\n    textAlign: \"center\",\r\n    background: \"#364d79\",\r\n  };\r\n  const [loading, setLoading] = useState(false);\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n  const onFinish = (values) => {\r\n    setLoading(true);\r\n    Auth.login(values.email, values.password)\r\n      .then((res) => {\r\n        localStorage.setItem(\"username\", JSON.stringify(res.data.username));\r\n        localStorage.setItem(\"id\", JSON.stringify(res.data.id));\r\n        setLoading(false);\r\n        setModalLogin(false);\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        errorLogin();\r\n        onFinishFailed();\r\n      });\r\n  };\r\n  const onFinishRegister = (values) => {\r\n    setLoading(true);\r\n    Auth.register(values)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setModalRegister(false);\r\n        successRegister();\r\n      })\r\n      .catch((error) => {\r\n        errorLogin();\r\n        onFinishFailed();\r\n      });\r\n  };\r\n  const onFinishDelivery = (values) => {\r\n    setLoading(true);\r\n    const tempDetails = [];\r\n    details.map((detail) => {\r\n      tempDetails.push(detail.order);\r\n    });\r\n    const datas = {\r\n      recipientName: values.recipientName,\r\n      orderAddress: values.orderAddress,\r\n      phone: values.phone,\r\n      user: {\r\n        id: user.id,\r\n      },\r\n      details: tempDetails,\r\n    };\r\n    OrderAPI.postOrder(datas, JSON.parse(localStorage.getItem(\"token\")))\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setIsModalVisible(false);\r\n        success();\r\n        setCount(0);\r\n      })\r\n      .catch((error1) => {\r\n        error();\r\n        onFinishFailed();\r\n      });\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    setLoading(false);\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const showModalLogin = () => {\r\n    setModalLogin(true);\r\n  };\r\n  const showModalRegister = () => {\r\n    setModalRegister(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    setModalLogin(false);\r\n    setModalRegister(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setModalLogin(false);\r\n  };\r\n  const handleCancelRegister = () => {\r\n    setModalRegister(false);\r\n  };\r\n  const [selectedKey, setSelectedKey] = useState(\r\n    path === \"/product/category=1\"\r\n      ? 1\r\n      : path === \"/product/category=2\"\r\n      ? 2\r\n      : path === \"/product/category=3\"\r\n      ? 3\r\n      : path === \"/product/category=4\"\r\n      ? 4\r\n      : path === \"/product/category=5\"\r\n      ? 5\r\n      : path === \"/product/category=6\"\r\n      ? 6\r\n      : path === \"/product/category=7\"\r\n      ? 7\r\n      : path === \"/product/category=8\"\r\n      ? 8\r\n      : path === \"/product/category=9\"\r\n      ? 9\r\n      : path === \"/product/category=10\"\r\n      ? 10\r\n      : 99\r\n  );\r\n\r\n  const changeKey = (e) => {\r\n    setSelectedKey(e.key);\r\n  };\r\n  const scrollCallBack = () => {\r\n    const sider = document.getElementById(\"mySider\");\r\n    const content = document.getElementById(\"myContent\");\r\n    const sticky = 476;\r\n    if (window.pageYOffset > sticky) {\r\n      sider.classList.add(\"sticky\");\r\n      content.classList.add(\"content\");\r\n    } else {\r\n      sider.classList.remove(\"sticky\");\r\n      content.classList.remove(\"content\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", scrollCallBack);\r\n    CategoryAPI.getCategory()\r\n      .then((res) => {\r\n        setCategories(res.data);\r\n      })\r\n      .catch((error) => {});\r\n    Auth.getUserByUsername(\r\n      JSON.parse(localStorage.getItem(\"token\")),\r\n      JSON.parse(localStorage.getItem(\"username\"))\r\n    )\r\n      .then((res) => {})\r\n      .catch((err) => {\r\n        setUser(err.response.data);\r\n      });\r\n  }, [user]);\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Layout>\r\n          <Header className=\"header\">\r\n            <a href=\"/product/category=1\">\r\n              <CoffeeOutlined style={{ fontSize: 26, color: \"white\" }} />\r\n            </a>\r\n            <Search\r\n              placeholder=\"input search text\"\r\n              enterButton\r\n              allowClear\r\n              style={{ width: 400 }}\r\n            />\r\n            <div\r\n              style={{\r\n                width: localStorage.getItem(\"username\") ? \"15%\" : \"10%\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Dropdown overlay={listOrder} trigger={[\"click\"]}>\r\n                <Badge count={count} showZero={true}>\r\n                  <ShoppingCartOutlined\r\n                    style={{ fontSize: 26, color: \"white\" }}\r\n                  />\r\n                </Badge>\r\n              </Dropdown>\r\n\r\n              {localStorage.getItem(\"username\") !== null ? (\r\n                <Dropdown overlay={listlogOut} trigger={[\"hover\"]}>\r\n                  <p style={{ color: \"white\" }}>Hi {user && user.fullname}</p>\r\n                </Dropdown>\r\n              ) : (\r\n                <Button onClick={showModalLogin}>Login</Button>\r\n              )}\r\n            </div>\r\n          </Header>\r\n          <Content style={{ width: \"100%\" }}>\r\n            <Carousel autoplay>\r\n              <div>\r\n                <h3 style={contentStyle}>1</h3>\r\n              </div>\r\n              <div>\r\n                <h3 style={contentStyle}>2</h3>\r\n              </div>\r\n              <div>\r\n                <h3 style={contentStyle}>3</h3>\r\n              </div>\r\n              <div>\r\n                <h3 style={contentStyle}>4</h3>\r\n              </div>\r\n            </Carousel>\r\n          </Content>\r\n          <Content style={{ padding: \"0 50px\", minHeight: \"100vh\" }}>\r\n            <Switch>\r\n              <Layout\r\n                className=\"site-layout-background\"\r\n                style={{ padding: \"24px 0\" }}\r\n              >\r\n                <Content\r\n                  style={{ padding: \"0 24px\", minHeight: 280 }}\r\n                  id=\"myContent\"\r\n                >\r\n                  <Route\r\n                    exact\r\n                    path=\"/product/category=:id\"\r\n                    // component={Product}\r\n                    render={(props) => (\r\n                      <Product {...props} parentCallback={recieveData} />\r\n                    )}\r\n                  >\r\n                    {/* <Product parentCallback={recieveData} /> */}\r\n                  </Route>\r\n                </Content>\r\n                <Sider\r\n                  className=\"site-layout-background\"\r\n                  id=\"mySider\"\r\n                  style={{\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <Menu\r\n                    mode=\"inline\"\r\n                    style={{ height: \"100%\" }}\r\n                    selectedKeys={[selectedKey + \"\"]}\r\n                    // onClick={changeKey}\r\n                    // onChange={changeKey}\r\n                  >\r\n                    {categories &&\r\n                      categories.map((category, index) => {\r\n                        return (\r\n                          <Menu.Item key={index + 1} onClick={changeKey}>\r\n                            <Link to={`/product/category=${index + 1}`}>\r\n                              {category.name}\r\n                            </Link>\r\n                          </Menu.Item>\r\n                        );\r\n                      })}\r\n                  </Menu>\r\n                </Sider>\r\n              </Layout>\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>Powered by BaoRay</Footer>\r\n        </Layout>\r\n        <Modal\r\n          title=\"Recipient details\"\r\n          visible={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          footer={false}\r\n        >\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            onFinish={onFinishDelivery}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"Recipient Name\"\r\n              name=\"recipientName\"\r\n              rules={[\r\n                { required: true, message: \"Please input recipient name!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Address\"\r\n              name=\"orderAddress\"\r\n              rules={[\r\n                { required: true, message: \"Please input your address!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Phone Number\"\r\n              name=\"phone\"\r\n              rules={[\r\n                { required: true, message: \"Please input your Phone Number!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                loading={loading}\r\n                disabled={loading}\r\n              >\r\n                {loading ? \"Delivering...\" : \"Delivery now\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          title=\"Login\"\r\n          visible={modalLogin}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          footer={false}\r\n          style={{ display: \"flex\" }}\r\n        >\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              rules={[{ required: true, message: \"Please input your email!\" }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                loading={loading}\r\n                disabled={loading}\r\n              >\r\n                {loading ? \"Logging in ...\" : \"Log in\"}\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginLeft: 16 }}\r\n                onClick={showModalRegister}\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          title=\"Register\"\r\n          visible={modalRegister}\r\n          onOk={handleOk}\r\n          onCancel={handleCancelRegister}\r\n          footer={false}\r\n          style={{ display: \"flex\" }}\r\n        >\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            onFinish={onFinishRegister}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"Fullname\"\r\n              name=\"fullname\"\r\n              rules={[\r\n                { required: true, message: \"Please input your fullname!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              rules={[{ required: true, message: \"Please input your phone!\" }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Address\"\r\n              name=\"address\"\r\n              rules={[\r\n                { required: true, message: \"Please input your address!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                loading={loading}\r\n                disabled={loading}\r\n              >\r\n                {loading ? \"Registering ...\" : \"Register\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Bao\\Desktop\\da-java\\src\\guard\\ProtectedRoute.js",[],"C:\\Users\\Bao\\Desktop\\da-java\\src\\pages\\cart\\Cart.js",["71","72"],"import React, { useState, useEffect } from \"react\";\r\nimport OrderAPI from \"../../api/OrderAPI\";\r\nimport Auth from \"../../api/Auth\";\r\nimport { Layout } from \"antd\";\r\nimport { CoffeeOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function Cart() {\r\n  const { Header, Content } = Layout;\r\n  // const [orders, setOrders] = useState(null);\r\n  const [details, setDetails] = useState([]);\r\n  const [order, setOrder] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    OrderAPI.getOrderByUserId(\r\n      JSON.parse(localStorage.getItem(\"token\")),\r\n      JSON.parse(localStorage.getItem(\"id\"))\r\n    )\r\n      .then((res) => {\r\n        const detailsRes = [];\r\n        const resp = res.data;\r\n        resp.forEach((order) => detailsRes.push(order.details));\r\n        setDetails(detailsRes);\r\n        setOrder(resp);\r\n      })\r\n      .catch((err) => {});\r\n    Auth.getUserByUsername(\r\n      JSON.parse(localStorage.getItem(\"token\")),\r\n      JSON.parse(localStorage.getItem(\"username\"))\r\n    )\r\n      .then((res) => {})\r\n      .catch((err) => {\r\n        setUser(err.response.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Header className=\"header\">\r\n          <a href=\"/product/category=1\">\r\n            <CoffeeOutlined style={{ fontSize: 26, color: \"white\" }} />\r\n          </a>\r\n          {/* <Search\r\n            placeholder=\"input search text\"\r\n            enterButton\r\n            allowClear\r\n            style={{ width: 400 }}\r\n          /> */}\r\n          <div>\r\n            {localStorage.getItem(\"username\") !== null ? (\r\n              <p style={{ color: \"white\" }}>Hi {user && user.fullname}</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </Header>\r\n      </Layout>\r\n      <Content>\r\n        <h1>Your delivery</h1>\r\n        {details &&\r\n          details.map((detail, index) => {\r\n            return [\r\n              // muon return 2 cai tro len thi dung dau []\r\n              <h3>Order {index + 1}</h3>,\r\n              detail.map((a) => {\r\n                // nhieu map thi pahi return nhieu lan\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      maxWidth: 1024,\r\n                      margin: \"10px auto \",\r\n                      display: \"flex\",\r\n                    }}\r\n                  >\r\n                    <img src={a.product.image} height=\"120px\" width=\"120px\" />\r\n                    <div>\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <p style={{ margin: \"0px 10px\" }}>\r\n                          Name: {a.product.name}\r\n                        </p>\r\n                        <p style={{ margin: \"0px 10px\" }}>\r\n                          Quantity: {a.quantity}\r\n                        </p>\r\n                        <p style={{ margin: \"0px 10px\" }}>On the way ...</p>\r\n                      </div>\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <p style={{ margin: \"0px 10px\" }}>Note: {a.note}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }),\r\n            ];\r\n          })}\r\n      </Content>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Bao\\Desktop\\da-java\\src\\components\\product_detail\\ProductDetail.js",["73","74","75"],"C:\\Users\\Bao\\Desktop\\da-java\\src\\pages\\product\\Product.js",[],"C:\\Users\\Bao\\Desktop\\da-java\\src\\api\\ProductByCategoryAPI.js",["76"],"import axios from \"axios\";\r\n\r\nconst getProductByCategory = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(`https://beverage-app.herokuapp.com/product/category=${id}`)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport default { getProductByCategory };\r\n","C:\\Users\\Bao\\Desktop\\da-java\\src\\api\\CategoryAPI.js",["77"],"import axios from \"axios\";\r\n\r\nconst getCategory = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"https://beverage-app.herokuapp.com/category\")\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport default { getCategory };\r\n","C:\\Users\\Bao\\Desktop\\da-java\\src\\api\\OrderAPI.js",["78"],"import axios from \"axios\";\r\n\r\nconst postOrder = (datas, token) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\"https://beverage-app.herokuapp.com/order\", datas, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\nconst getOrderByUserId = (token, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(`https://beverage-app.herokuapp.com/order/user=${id}`, {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\nexport default { postOrder, getOrderByUserId };\r\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":13},{"ruleId":"83","severity":1,"message":"87","line":10,"column":8,"nodeType":"85","messageId":"86","endLine":10,"endColumn":22},{"ruleId":"83","severity":1,"message":"88","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":57,"column":1,"nodeType":"91","endLine":57,"endColumn":55},{"ruleId":"92","severity":1,"message":"93","line":88,"column":15,"nodeType":"94","endLine":92,"endColumn":17},{"ruleId":"95","severity":1,"message":"96","line":187,"column":26,"nodeType":"97","messageId":"98","endLine":187,"endColumn":28},{"ruleId":"83","severity":1,"message":"99","line":11,"column":10,"nodeType":"85","messageId":"86","endLine":11,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":75,"column":21,"nodeType":"94","endLine":75,"endColumn":79},{"ruleId":"83","severity":1,"message":"100","line":23,"column":19,"nodeType":"85","messageId":"86","endLine":23,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":37,"column":28,"nodeType":"97","messageId":"98","endLine":37,"endColumn":30},{"ruleId":"95","severity":1,"message":"96","line":46,"column":21,"nodeType":"97","messageId":"98","endLine":46,"endColumn":23},{"ruleId":"89","severity":1,"message":"90","line":16,"column":1,"nodeType":"91","endLine":16,"endColumn":41},{"ruleId":"89","severity":1,"message":"90","line":16,"column":1,"nodeType":"91","endLine":16,"endColumn":32},{"ruleId":"89","severity":1,"message":"90","line":35,"column":1,"nodeType":"91","endLine":35,"endColumn":48},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'ProtectedRoute' is defined but never used.","'Redirect' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'order' is assigned a value but never used.","'setCosttpp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]